// Mocks generated by Mockito 5.4.4 from annotations
// in app/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i18;

import 'package:app/core/errors/failure.dart' as _i19;
import 'package:app/core/services/hive_service.dart' as _i44;
import 'package:app/data/datasources/create_new_password_datasource.dart'
    as _i39;
import 'package:app/data/datasources/get_profile_datasource.dart' as _i40;
import 'package:app/data/datasources/login_data_source.dart' as _i42;
import 'package:app/data/datasources/places_data_source.dart' as _i43;
import 'package:app/data/datasources/resend_code_data_source.dart' as _i38;
import 'package:app/data/datasources/resend_password_data_source.dart' as _i37;
import 'package:app/data/datasources/roles_data_source.dart' as _i41;
import 'package:app/data/models/base/base_model.dart' as _i11;
import 'package:app/data/models/login/login_model.dart' as _i14;
import 'package:app/data/models/places/places_model.dart' as _i15;
import 'package:app/data/models/profile/profile_model.dart' as _i12;
import 'package:app/data/models/roles/roles_model.dart' as _i13;
import 'package:app/domain/entities/base_entity.dart' as _i30;
import 'package:app/domain/entities/login_entity.dart' as _i25;
import 'package:app/domain/entities/logout_entity.dart' as _i20;
import 'package:app/domain/entities/place_suggestion_entity.dart' as _i27;
import 'package:app/domain/entities/profile/profile_entity.dart' as _i22;
import 'package:app/domain/entities/register_entity.dart' as _i33;
import 'package:app/domain/entities/roles_entity.dart' as _i24;
import 'package:app/domain/repositories/create_new_password_repository.dart'
    as _i3;
import 'package:app/domain/repositories/get_places_repository.dart' as _i6;
import 'package:app/domain/repositories/get_profile_repository.dart' as _i7;
import 'package:app/domain/repositories/get_roles_repository.dart' as _i8;
import 'package:app/domain/repositories/login_repository.dart' as _i9;
import 'package:app/domain/repositories/logout_repository.dart' as _i17;
import 'package:app/domain/repositories/register_repository.dart' as _i4;
import 'package:app/domain/repositories/resend_code_repository.dart' as _i10;
import 'package:app/domain/repositories/resend_password_repository.dart' as _i5;
import 'package:app/domain/usecases/create_new_password_usecase.dart' as _i35;
import 'package:app/domain/usecases/get_place_detail_usecase.dart' as _i29;
import 'package:app/domain/usecases/get_places_usecase.dart' as _i28;
import 'package:app/domain/usecases/get_profile_usecase.dart' as _i23;
import 'package:app/domain/usecases/get_roles_usecase.dart' as _i36;
import 'package:app/domain/usecases/login_usecase.dart' as _i26;
import 'package:app/domain/usecases/logout_usecase.dart' as _i21;
import 'package:app/domain/usecases/register_usecase.dart' as _i34;
import 'package:app/domain/usecases/resend_code_usecase.dart' as _i32;
import 'package:app/domain/usecases/resend_password_usecase.dart' as _i31;
import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateNewPasswordRepository_1 extends _i1.SmartFake
    implements _i3.CreateNewPasswordRepository {
  _FakeCreateNewPasswordRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRegisterRepository_2 extends _i1.SmartFake
    implements _i4.RegisterRepository {
  _FakeRegisterRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendPasswordRepository_3 extends _i1.SmartFake
    implements _i5.ResendPasswordRepository {
  _FakeResendPasswordRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPlacesRepository_4 extends _i1.SmartFake
    implements _i6.GetPlacesRepository {
  _FakeGetPlacesRepository_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetProfileRepository_5 extends _i1.SmartFake
    implements _i7.GetProfileRepository {
  _FakeGetProfileRepository_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRolesRepository_6 extends _i1.SmartFake
    implements _i8.GetRolesRepository {
  _FakeGetRolesRepository_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginRepository_7 extends _i1.SmartFake
    implements _i9.LoginRepository {
  _FakeLoginRepository_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendCodeRepository_8 extends _i1.SmartFake
    implements _i10.ResendCodeRepository {
  _FakeResendCodeRepository_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseModel_9 extends _i1.SmartFake implements _i11.BaseModel {
  _FakeBaseModel_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfileModel_10 extends _i1.SmartFake implements _i12.ProfileModel {
  _FakeProfileModel_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRolesModel_11 extends _i1.SmartFake implements _i13.RolesModel {
  _FakeRolesModel_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginModel_12 extends _i1.SmartFake implements _i14.LoginModel {
  _FakeLoginModel_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlacesModel_13 extends _i1.SmartFake implements _i15.PlacesModel {
  _FakePlacesModel_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_14 extends _i1.SmartFake implements _i16.BaseOptions {
  _FakeBaseOptions_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_15 extends _i1.SmartFake
    implements _i16.HttpClientAdapter {
  _FakeHttpClientAdapter_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_16 extends _i1.SmartFake implements _i16.Transformer {
  _FakeTransformer_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_17 extends _i1.SmartFake implements _i16.Interceptors {
  _FakeInterceptors_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_18<T1> extends _i1.SmartFake implements _i16.Response<T1> {
  _FakeResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LogoutRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutRepository extends _i1.Mock implements _i17.LogoutRepository {
  MockLogoutRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i20.LogoutEntity>> logout(
          _i21.LogoutParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i20.LogoutEntity>>.value(
                _FakeEither_0<_i19.Failure, _i20.LogoutEntity>(
          this,
          Invocation.method(
            #logout,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i20.LogoutEntity>>);
}

/// A class which mocks [GetProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProfileRepository extends _i1.Mock
    implements _i7.GetProfileRepository {
  MockGetProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i22.ProfileEntity>> getProfile(
          _i23.GetProfileParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i22.ProfileEntity>>.value(
                _FakeEither_0<_i19.Failure, _i22.ProfileEntity>(
          this,
          Invocation.method(
            #getProfile,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i22.ProfileEntity>>);
}

/// A class which mocks [GetRolesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRolesRepository extends _i1.Mock
    implements _i8.GetRolesRepository {
  MockGetRolesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i24.RolesEntity>> getRoles(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoles,
          [token],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i24.RolesEntity>>.value(
                _FakeEither_0<_i19.Failure, _i24.RolesEntity>(
          this,
          Invocation.method(
            #getRoles,
            [token],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i24.RolesEntity>>);
}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i9.LoginRepository {
  MockLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i25.LoginEntity>> login(
          _i26.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i25.LoginEntity>>.value(
                _FakeEither_0<_i19.Failure, _i25.LoginEntity>(
          this,
          Invocation.method(
            #login,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i25.LoginEntity>>);
}

/// A class which mocks [GetPlacesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPlacesRepository extends _i1.Mock
    implements _i6.GetPlacesRepository {
  MockGetPlacesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<
      _i2.Either<_i19.Failure, List<_i27.PlaceSuggestionEntity>>> getPlaces(
          _i28.GetPlacesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaces,
          [params],
        ),
        returnValue: _i18.Future<
                _i2
                .Either<_i19.Failure, List<_i27.PlaceSuggestionEntity>>>.value(
            _FakeEither_0<_i19.Failure, List<_i27.PlaceSuggestionEntity>>(
          this,
          Invocation.method(
            #getPlaces,
            [params],
          ),
        )),
      ) as _i18
          .Future<_i2.Either<_i19.Failure, List<_i27.PlaceSuggestionEntity>>>);

  @override
  _i18.Future<
      _i2.Either<_i19.Failure, _i27.PlaceSuggestionEntity>> getPlaceDetail(
          _i29.GetPlaceDetailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaceDetail,
          [params],
        ),
        returnValue: _i18
            .Future<_i2.Either<_i19.Failure, _i27.PlaceSuggestionEntity>>.value(
            _FakeEither_0<_i19.Failure, _i27.PlaceSuggestionEntity>(
          this,
          Invocation.method(
            #getPlaceDetail,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i27.PlaceSuggestionEntity>>);
}

/// A class which mocks [ResendPasswordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendPasswordRepository extends _i1.Mock
    implements _i5.ResendPasswordRepository {
  MockResendPasswordRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>> resendPassword(
          _i31.ResendPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendPassword,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>.value(
                _FakeEither_0<_i19.Failure, _i30.BaseEntity>(
          this,
          Invocation.method(
            #resendPassword,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>);
}

/// A class which mocks [ResendCodeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendCodeRepository extends _i1.Mock
    implements _i10.ResendCodeRepository {
  MockResendCodeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>> resendCode(
          _i32.ResendCodeParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendCode,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>.value(
                _FakeEither_0<_i19.Failure, _i30.BaseEntity>(
          this,
          Invocation.method(
            #resendCode,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>);
}

/// A class which mocks [RegisterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegisterRepository extends _i1.Mock
    implements _i4.RegisterRepository {
  MockRegisterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i33.RegisterEntity>> register(
          _i34.RegisterParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i33.RegisterEntity>>.value(
                _FakeEither_0<_i19.Failure, _i33.RegisterEntity>(
          this,
          Invocation.method(
            #register,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i33.RegisterEntity>>);
}

/// A class which mocks [CreateNewPasswordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateNewPasswordRepository extends _i1.Mock
    implements _i3.CreateNewPasswordRepository {
  MockCreateNewPasswordRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>> createNewPassword(
          _i35.CreateNewPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewPassword,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>.value(
                _FakeEither_0<_i19.Failure, _i30.BaseEntity>(
          this,
          Invocation.method(
            #createNewPassword,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>);
}

/// A class which mocks [CreateNewPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateNewPasswordUseCase extends _i1.Mock
    implements _i35.CreateNewPasswordUseCase {
  MockCreateNewPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.CreateNewPasswordRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeCreateNewPasswordRepository_1(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.CreateNewPasswordRepository);

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>> createNewPassword(
          _i35.CreateNewPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewPassword,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>.value(
                _FakeEither_0<_i19.Failure, _i30.BaseEntity>(
          this,
          Invocation.method(
            #createNewPassword,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>);
}

/// A class which mocks [RegisterUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegisterUseCase extends _i1.Mock implements _i34.RegisterUseCase {
  MockRegisterUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.RegisterRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeRegisterRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.RegisterRepository);

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i33.RegisterEntity>> execute(
          _i34.RegisterParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i33.RegisterEntity>>.value(
                _FakeEither_0<_i19.Failure, _i33.RegisterEntity>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i33.RegisterEntity>>);
}

/// A class which mocks [ResendPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendPasswordUseCase extends _i1.Mock
    implements _i31.ResendPasswordUseCase {
  MockResendPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ResendPasswordRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeResendPasswordRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.ResendPasswordRepository);

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>> resendPassword(
          _i31.ResendPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendPassword,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>.value(
                _FakeEither_0<_i19.Failure, _i30.BaseEntity>(
          this,
          Invocation.method(
            #resendPassword,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>);
}

/// A class which mocks [GetPlacesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPlacesUseCase extends _i1.Mock implements _i28.GetPlacesUseCase {
  MockGetPlacesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.GetPlacesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGetPlacesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.GetPlacesRepository);

  @override
  _i18.Future<
      _i2.Either<_i19.Failure, List<_i27.PlaceSuggestionEntity>>> execute(
          _i28.GetPlacesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i18.Future<
                _i2
                .Either<_i19.Failure, List<_i27.PlaceSuggestionEntity>>>.value(
            _FakeEither_0<_i19.Failure, List<_i27.PlaceSuggestionEntity>>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i18
          .Future<_i2.Either<_i19.Failure, List<_i27.PlaceSuggestionEntity>>>);
}

/// A class which mocks [GetProfileUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProfileUseCase extends _i1.Mock implements _i23.GetProfileUseCase {
  MockGetProfileUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.GetProfileRepository get getProfileRepository => (super.noSuchMethod(
        Invocation.getter(#getProfileRepository),
        returnValue: _FakeGetProfileRepository_5(
          this,
          Invocation.getter(#getProfileRepository),
        ),
      ) as _i7.GetProfileRepository);

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i22.ProfileEntity>> getProfile(
          _i23.GetProfileParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i22.ProfileEntity>>.value(
                _FakeEither_0<_i19.Failure, _i22.ProfileEntity>(
          this,
          Invocation.method(
            #getProfile,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i22.ProfileEntity>>);
}

/// A class which mocks [GetRolesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRolesUseCase extends _i1.Mock implements _i36.GetRolesUseCase {
  MockGetRolesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.GetRolesRepository get rolesRepository => (super.noSuchMethod(
        Invocation.getter(#rolesRepository),
        returnValue: _FakeGetRolesRepository_6(
          this,
          Invocation.getter(#rolesRepository),
        ),
      ) as _i8.GetRolesRepository);

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i24.RolesEntity>> execute(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [token],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i24.RolesEntity>>.value(
                _FakeEither_0<_i19.Failure, _i24.RolesEntity>(
          this,
          Invocation.method(
            #execute,
            [token],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i24.RolesEntity>>);
}

/// A class which mocks [GetPlaceDetailUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPlaceDetailUseCase extends _i1.Mock
    implements _i29.GetPlaceDetailUseCase {
  MockGetPlaceDetailUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.GetPlacesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGetPlacesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.GetPlacesRepository);

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i27.PlaceSuggestionEntity>> execute(
          _i29.GetPlaceDetailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i18
            .Future<_i2.Either<_i19.Failure, _i27.PlaceSuggestionEntity>>.value(
            _FakeEither_0<_i19.Failure, _i27.PlaceSuggestionEntity>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i27.PlaceSuggestionEntity>>);
}

/// A class which mocks [LoginUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUseCase extends _i1.Mock implements _i26.LoginUseCase {
  MockLoginUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.LoginRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeLoginRepository_7(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i9.LoginRepository);

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i25.LoginEntity>> execute(
          _i26.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i25.LoginEntity>>.value(
                _FakeEither_0<_i19.Failure, _i25.LoginEntity>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i25.LoginEntity>>);
}

/// A class which mocks [ResendCodeUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendCodeUseCase extends _i1.Mock implements _i32.ResendCodeUseCase {
  MockResendCodeUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.ResendCodeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeResendCodeRepository_8(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i10.ResendCodeRepository);

  @override
  _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>> resendCode(
          _i32.ResendCodeParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendCode,
          [params],
        ),
        returnValue:
            _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>.value(
                _FakeEither_0<_i19.Failure, _i30.BaseEntity>(
          this,
          Invocation.method(
            #resendCode,
            [params],
          ),
        )),
      ) as _i18.Future<_i2.Either<_i19.Failure, _i30.BaseEntity>>);
}

/// A class which mocks [ResendPasswordDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendPasswordDataSource extends _i1.Mock
    implements _i37.ResendPasswordDataSource {
  MockResendPasswordDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i11.BaseModel> resendPassword(
          _i31.ResendPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendPassword,
          [params],
        ),
        returnValue: _i18.Future<_i11.BaseModel>.value(_FakeBaseModel_9(
          this,
          Invocation.method(
            #resendPassword,
            [params],
          ),
        )),
      ) as _i18.Future<_i11.BaseModel>);
}

/// A class which mocks [ResendCodeDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendCodeDataSource extends _i1.Mock
    implements _i38.ResendCodeDataSource {
  MockResendCodeDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i11.BaseModel> resendCode(_i32.ResendCodeParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendCode,
          [params],
        ),
        returnValue: _i18.Future<_i11.BaseModel>.value(_FakeBaseModel_9(
          this,
          Invocation.method(
            #resendCode,
            [params],
          ),
        )),
      ) as _i18.Future<_i11.BaseModel>);
}

/// A class which mocks [CreateNewPasswordDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateNewPasswordDataSource extends _i1.Mock
    implements _i39.CreateNewPasswordDataSource {
  MockCreateNewPasswordDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i11.BaseModel> createNewPassword(
          _i35.CreateNewPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewPassword,
          [params],
        ),
        returnValue: _i18.Future<_i11.BaseModel>.value(_FakeBaseModel_9(
          this,
          Invocation.method(
            #createNewPassword,
            [params],
          ),
        )),
      ) as _i18.Future<_i11.BaseModel>);
}

/// A class which mocks [GetProfileDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProfileDataSource extends _i1.Mock
    implements _i40.GetProfileDataSource {
  MockGetProfileDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i12.ProfileModel> getProfile(_i23.GetProfileParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [params],
        ),
        returnValue: _i18.Future<_i12.ProfileModel>.value(_FakeProfileModel_10(
          this,
          Invocation.method(
            #getProfile,
            [params],
          ),
        )),
      ) as _i18.Future<_i12.ProfileModel>);
}

/// A class which mocks [RolesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRolesDataSource extends _i1.Mock implements _i41.RolesDataSource {
  MockRolesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i13.RolesModel> getRoles(String? token) => (super.noSuchMethod(
        Invocation.method(
          #getRoles,
          [token],
        ),
        returnValue: _i18.Future<_i13.RolesModel>.value(_FakeRolesModel_11(
          this,
          Invocation.method(
            #getRoles,
            [token],
          ),
        )),
      ) as _i18.Future<_i13.RolesModel>);
}

/// A class which mocks [LoginDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginDataSource extends _i1.Mock implements _i42.LoginDataSource {
  MockLoginDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i14.LoginModel> login(_i26.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [params],
        ),
        returnValue: _i18.Future<_i14.LoginModel>.value(_FakeLoginModel_12(
          this,
          Invocation.method(
            #login,
            [params],
          ),
        )),
      ) as _i18.Future<_i14.LoginModel>);
}

/// A class which mocks [PlacesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlacesDataSource extends _i1.Mock implements _i43.PlacesDataSource {
  MockPlacesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<List<_i15.PlacesModel>> getPlaces(_i28.GetPlacesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaces,
          [params],
        ),
        returnValue:
            _i18.Future<List<_i15.PlacesModel>>.value(<_i15.PlacesModel>[]),
      ) as _i18.Future<List<_i15.PlacesModel>>);

  @override
  _i18.Future<_i15.PlacesModel> getPlaceDetail(
          _i29.GetPlaceDetailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaceDetail,
          [params],
        ),
        returnValue: _i18.Future<_i15.PlacesModel>.value(_FakePlacesModel_13(
          this,
          Invocation.method(
            #getPlaceDetail,
            [params],
          ),
        )),
      ) as _i18.Future<_i15.PlacesModel>);
}

/// A class which mocks [HiveService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveService extends _i1.Mock implements _i44.HiveService {
  MockHiveService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<void> openBox(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #openBox,
          [boxName],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  void registerProfileAdapter() => super.noSuchMethod(
        Invocation.method(
          #registerProfileAdapter,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerProfileDataAdapter() => super.noSuchMethod(
        Invocation.method(
          #registerProfileDataAdapter,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<void> putData(
    String? boxName,
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putData,
          [
            boxName,
            key,
            value,
          ],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<dynamic> getData(
    String? boxName,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [
            boxName,
            key,
          ],
        ),
        returnValue: _i18.Future<dynamic>.value(),
      ) as _i18.Future<dynamic>);

  @override
  _i18.Future<void> deleteData(
    String? boxName,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteData,
          [
            boxName,
            key,
          ],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);

  @override
  _i18.Future<void> clearBox(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #clearBox,
          [boxName],
        ),
        returnValue: _i18.Future<void>.value(),
        returnValueForMissingStub: _i18.Future<void>.value(),
      ) as _i18.Future<void>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i16.Dio {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_14(
          this,
          Invocation.getter(#options),
        ),
      ) as _i16.BaseOptions);

  @override
  set options(_i16.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_15(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i16.HttpClientAdapter);

  @override
  set httpClientAdapter(_i16.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_16(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i16.Transformer);

  @override
  set transformer(_i16.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_17(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i16.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<_i16.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
    _i16.ProgressCallback? onSendProgress,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
    _i16.ProgressCallback? onSendProgress,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
    _i16.ProgressCallback? onSendProgress,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
    _i16.ProgressCallback? onSendProgress,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
    _i16.ProgressCallback? onSendProgress,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
    _i16.ProgressCallback? onSendProgress,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i16.Options? options,
    _i16.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i16.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i16.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i16.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i18.Future<_i16.Response<dynamic>>.value(_FakeResponse_18<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<dynamic>>);

  @override
  _i18.Future<_i16.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i16.ProgressCallback? onReceiveProgress,
    _i16.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i16.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i18.Future<_i16.Response<dynamic>>.value(_FakeResponse_18<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<dynamic>>);

  @override
  _i18.Future<_i16.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i16.CancelToken? cancelToken,
    _i16.Options? options,
    _i16.ProgressCallback? onSendProgress,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i16.CancelToken? cancelToken,
    _i16.Options? options,
    _i16.ProgressCallback? onSendProgress,
    _i16.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);

  @override
  _i18.Future<_i16.Response<T>> fetch<T>(_i16.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i18.Future<_i16.Response<T>>.value(_FakeResponse_18<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i18.Future<_i16.Response<T>>);
}
