// Mocks generated by Mockito 5.4.4 from annotations
// in app/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i26;
import 'dart:ui' as _i59;

import 'package:app/core/errors/failure.dart' as _i27;
import 'package:app/core/router/app_router.dart' as _i60;
import 'package:app/core/services/hive_service.dart' as _i57;
import 'package:app/data/datasources/create_new_password_datasource.dart'
    as _i51;
import 'package:app/data/datasources/get_feeds_datasource.dart' as _i56;
import 'package:app/data/datasources/get_profile_datasource.dart' as _i52;
import 'package:app/data/datasources/login_data_source.dart' as _i54;
import 'package:app/data/datasources/logout_data_source.dart' as _i48;
import 'package:app/data/datasources/places_data_source.dart' as _i55;
import 'package:app/data/datasources/resend_code_data_source.dart' as _i50;
import 'package:app/data/datasources/resend_password_data_source.dart' as _i49;
import 'package:app/data/datasources/roles_data_source.dart' as _i53;
import 'package:app/data/models/base/base_model.dart' as _i13;
import 'package:app/data/models/feed/feed_model.dart' as _i18;
import 'package:app/data/models/login/login_model.dart' as _i16;
import 'package:app/data/models/logout/logout_model.dart' as _i12;
import 'package:app/data/models/places/places_model.dart' as _i17;
import 'package:app/data/models/profile/profile_model.dart' as _i14;
import 'package:app/data/models/roles/roles_model.dart' as _i15;
import 'package:app/domain/entities/base_entity.dart' as _i41;
import 'package:app/domain/entities/feed/feed_entity.dart' as _i39;
import 'package:app/domain/entities/login_entity.dart' as _i33;
import 'package:app/domain/entities/logout_entity.dart' as _i28;
import 'package:app/domain/entities/place_suggestion_entity.dart' as _i35;
import 'package:app/domain/entities/profile/profile_entity.dart' as _i30;
import 'package:app/domain/entities/register_entity.dart' as _i44;
import 'package:app/domain/entities/roles_entity.dart' as _i32;
import 'package:app/domain/repositories/create_new_password_repository.dart'
    as _i3;
import 'package:app/domain/repositories/get_feeds_repository.dart' as _i38;
import 'package:app/domain/repositories/get_places_repository.dart' as _i6;
import 'package:app/domain/repositories/get_profile_repository.dart' as _i7;
import 'package:app/domain/repositories/get_roles_repository.dart' as _i8;
import 'package:app/domain/repositories/login_repository.dart' as _i9;
import 'package:app/domain/repositories/logout_repository.dart' as _i10;
import 'package:app/domain/repositories/register_repository.dart' as _i4;
import 'package:app/domain/repositories/resend_code_repository.dart' as _i11;
import 'package:app/domain/repositories/resend_password_repository.dart' as _i5;
import 'package:app/domain/usecases/create_new_password_usecase.dart' as _i46;
import 'package:app/domain/usecases/get_feeds_usecase.dart' as _i40;
import 'package:app/domain/usecases/get_place_detail_usecase.dart' as _i37;
import 'package:app/domain/usecases/get_places_usecase.dart' as _i36;
import 'package:app/domain/usecases/get_profile_usecase.dart' as _i31;
import 'package:app/domain/usecases/get_roles_usecase.dart' as _i47;
import 'package:app/domain/usecases/login_usecase.dart' as _i34;
import 'package:app/domain/usecases/logout_usecase.dart' as _i29;
import 'package:app/domain/usecases/register_usecase.dart' as _i45;
import 'package:app/domain/usecases/resend_code_usecase.dart' as _i43;
import 'package:app/domain/usecases/resend_password_usecase.dart' as _i42;
import 'package:auto_route/auto_route.dart' as _i20;
import 'package:auto_route/src/matcher/route_matcher.dart' as _i23;
import 'package:auto_route/src/router/controller/navigation_history/navigation_history_base.dart'
    as _i24;
import 'package:auto_route/src/router/controller/pageless_routes_observer.dart'
    as _i21;
import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i25;
import 'package:flutter/foundation.dart' as _i19;
import 'package:flutter/material.dart' as _i22;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i58;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateNewPasswordRepository_1 extends _i1.SmartFake
    implements _i3.CreateNewPasswordRepository {
  _FakeCreateNewPasswordRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRegisterRepository_2 extends _i1.SmartFake
    implements _i4.RegisterRepository {
  _FakeRegisterRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendPasswordRepository_3 extends _i1.SmartFake
    implements _i5.ResendPasswordRepository {
  _FakeResendPasswordRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPlacesRepository_4 extends _i1.SmartFake
    implements _i6.GetPlacesRepository {
  _FakeGetPlacesRepository_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetProfileRepository_5 extends _i1.SmartFake
    implements _i7.GetProfileRepository {
  _FakeGetProfileRepository_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRolesRepository_6 extends _i1.SmartFake
    implements _i8.GetRolesRepository {
  _FakeGetRolesRepository_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginRepository_7 extends _i1.SmartFake
    implements _i9.LoginRepository {
  _FakeLoginRepository_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogoutRepository_8 extends _i1.SmartFake
    implements _i10.LogoutRepository {
  _FakeLogoutRepository_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendCodeRepository_9 extends _i1.SmartFake
    implements _i11.ResendCodeRepository {
  _FakeResendCodeRepository_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogoutModel_10 extends _i1.SmartFake implements _i12.LogoutModel {
  _FakeLogoutModel_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseModel_11 extends _i1.SmartFake implements _i13.BaseModel {
  _FakeBaseModel_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfileModel_12 extends _i1.SmartFake implements _i14.ProfileModel {
  _FakeProfileModel_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRolesModel_13 extends _i1.SmartFake implements _i15.RolesModel {
  _FakeRolesModel_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginModel_14 extends _i1.SmartFake implements _i16.LoginModel {
  _FakeLoginModel_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlacesModel_15 extends _i1.SmartFake implements _i17.PlacesModel {
  _FakePlacesModel_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeedModel_16 extends _i1.SmartFake implements _i18.FeedModel {
  _FakeFeedModel_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalKey_17 extends _i1.SmartFake implements _i19.LocalKey {
  _FakeLocalKey_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePendingRoutesHandler_18 extends _i1.SmartFake
    implements _i20.PendingRoutesHandler {
  _FakePendingRoutesHandler_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePagelessRoutesObserver_19 extends _i1.SmartFake
    implements _i21.PagelessRoutesObserver {
  _FakePagelessRoutesObserver_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActiveGuardObserver_20 extends _i1.SmartFake
    implements _i20.ActiveGuardObserver {
  _FakeActiveGuardObserver_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_21<T extends _i22.State<_i22.StatefulWidget>>
    extends _i1.SmartFake implements _i22.GlobalKey<T> {
  _FakeGlobalKey_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRouteCollection_22 extends _i1.SmartFake
    implements _i20.RouteCollection {
  _FakeRouteCollection_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAutoRoutePage_23<T> extends _i1.SmartFake
    implements _i20.AutoRoutePage<T> {
  _FakeAutoRoutePage_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRouteMatcher_24 extends _i1.SmartFake implements _i23.RouteMatcher {
  _FakeRouteMatcher_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRouteData_25 extends _i1.SmartFake implements _i20.RouteData {
  _FakeRouteData_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationHistory_26 extends _i1.SmartFake
    implements _i24.NavigationHistory {
  _FakeNavigationHistory_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUrlState_27 extends _i1.SmartFake implements _i20.UrlState {
  _FakeUrlState_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRootStackRouter_28 extends _i1.SmartFake
    implements _i20.RootStackRouter {
  _FakeRootStackRouter_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRouteMatch_29<T> extends _i1.SmartFake
    implements _i20.RouteMatch<T> {
  _FakeRouteMatch_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRoutingController_30 extends _i1.SmartFake
    implements _i20.RoutingController {
  _FakeRoutingController_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_31 extends _i1.SmartFake implements _i25.BaseOptions {
  _FakeBaseOptions_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_32 extends _i1.SmartFake
    implements _i25.HttpClientAdapter {
  _FakeHttpClientAdapter_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_33 extends _i1.SmartFake implements _i25.Transformer {
  _FakeTransformer_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_34 extends _i1.SmartFake implements _i25.Interceptors {
  _FakeInterceptors_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_35<T1> extends _i1.SmartFake implements _i25.Response<T1> {
  _FakeResponse_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LogoutRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutRepository extends _i1.Mock implements _i10.LogoutRepository {
  MockLogoutRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i28.LogoutEntity>> logout(
          _i29.LogoutParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i28.LogoutEntity>>.value(
                _FakeEither_0<_i27.Failure, _i28.LogoutEntity>(
          this,
          Invocation.method(
            #logout,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i28.LogoutEntity>>);
}

/// A class which mocks [GetProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProfileRepository extends _i1.Mock
    implements _i7.GetProfileRepository {
  MockGetProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i30.ProfileEntity>> getProfile(
          _i31.GetProfileParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i30.ProfileEntity>>.value(
                _FakeEither_0<_i27.Failure, _i30.ProfileEntity>(
          this,
          Invocation.method(
            #getProfile,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i30.ProfileEntity>>);
}

/// A class which mocks [GetRolesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRolesRepository extends _i1.Mock
    implements _i8.GetRolesRepository {
  MockGetRolesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i32.RolesEntity>> getRoles(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoles,
          [token],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i32.RolesEntity>>.value(
                _FakeEither_0<_i27.Failure, _i32.RolesEntity>(
          this,
          Invocation.method(
            #getRoles,
            [token],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i32.RolesEntity>>);
}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i9.LoginRepository {
  MockLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i33.LoginEntity>> login(
          _i34.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i33.LoginEntity>>.value(
                _FakeEither_0<_i27.Failure, _i33.LoginEntity>(
          this,
          Invocation.method(
            #login,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i33.LoginEntity>>);
}

/// A class which mocks [GetPlacesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPlacesRepository extends _i1.Mock
    implements _i6.GetPlacesRepository {
  MockGetPlacesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<
      _i2.Either<_i27.Failure, List<_i35.PlaceSuggestionEntity>>> getPlaces(
          _i36.GetPlacesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaces,
          [params],
        ),
        returnValue: _i26.Future<
                _i2
                .Either<_i27.Failure, List<_i35.PlaceSuggestionEntity>>>.value(
            _FakeEither_0<_i27.Failure, List<_i35.PlaceSuggestionEntity>>(
          this,
          Invocation.method(
            #getPlaces,
            [params],
          ),
        )),
      ) as _i26
          .Future<_i2.Either<_i27.Failure, List<_i35.PlaceSuggestionEntity>>>);

  @override
  _i26.Future<
      _i2.Either<_i27.Failure, _i35.PlaceSuggestionEntity>> getPlaceDetail(
          _i37.GetPlaceDetailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaceDetail,
          [params],
        ),
        returnValue: _i26
            .Future<_i2.Either<_i27.Failure, _i35.PlaceSuggestionEntity>>.value(
            _FakeEither_0<_i27.Failure, _i35.PlaceSuggestionEntity>(
          this,
          Invocation.method(
            #getPlaceDetail,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i35.PlaceSuggestionEntity>>);
}

/// A class which mocks [GetFeedsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFeedsRepository extends _i1.Mock
    implements _i38.GetFeedsRepository {
  MockGetFeedsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i39.FeedEntity>> getFeeds(
          _i40.GetFeedParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFeeds,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i39.FeedEntity>>.value(
                _FakeEither_0<_i27.Failure, _i39.FeedEntity>(
          this,
          Invocation.method(
            #getFeeds,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i39.FeedEntity>>);
}

/// A class which mocks [ResendPasswordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendPasswordRepository extends _i1.Mock
    implements _i5.ResendPasswordRepository {
  MockResendPasswordRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>> resendPassword(
          _i42.ResendPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendPassword,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>.value(
                _FakeEither_0<_i27.Failure, _i41.BaseEntity>(
          this,
          Invocation.method(
            #resendPassword,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>);
}

/// A class which mocks [ResendCodeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendCodeRepository extends _i1.Mock
    implements _i11.ResendCodeRepository {
  MockResendCodeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>> resendCode(
          _i43.ResendCodeParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendCode,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>.value(
                _FakeEither_0<_i27.Failure, _i41.BaseEntity>(
          this,
          Invocation.method(
            #resendCode,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>);
}

/// A class which mocks [RegisterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegisterRepository extends _i1.Mock
    implements _i4.RegisterRepository {
  MockRegisterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i44.RegisterEntity>> register(
          _i45.RegisterParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i44.RegisterEntity>>.value(
                _FakeEither_0<_i27.Failure, _i44.RegisterEntity>(
          this,
          Invocation.method(
            #register,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i44.RegisterEntity>>);
}

/// A class which mocks [CreateNewPasswordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateNewPasswordRepository extends _i1.Mock
    implements _i3.CreateNewPasswordRepository {
  MockCreateNewPasswordRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>> createNewPassword(
          _i46.CreateNewPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewPassword,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>.value(
                _FakeEither_0<_i27.Failure, _i41.BaseEntity>(
          this,
          Invocation.method(
            #createNewPassword,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>);
}

/// A class which mocks [CreateNewPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateNewPasswordUseCase extends _i1.Mock
    implements _i46.CreateNewPasswordUseCase {
  MockCreateNewPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.CreateNewPasswordRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeCreateNewPasswordRepository_1(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.CreateNewPasswordRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>> createNewPassword(
          _i46.CreateNewPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewPassword,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>.value(
                _FakeEither_0<_i27.Failure, _i41.BaseEntity>(
          this,
          Invocation.method(
            #createNewPassword,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>);
}

/// A class which mocks [RegisterUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegisterUseCase extends _i1.Mock implements _i45.RegisterUseCase {
  MockRegisterUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.RegisterRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeRegisterRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.RegisterRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i44.RegisterEntity>> execute(
          _i45.RegisterParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i44.RegisterEntity>>.value(
                _FakeEither_0<_i27.Failure, _i44.RegisterEntity>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i44.RegisterEntity>>);
}

/// A class which mocks [ResendPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendPasswordUseCase extends _i1.Mock
    implements _i42.ResendPasswordUseCase {
  MockResendPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ResendPasswordRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeResendPasswordRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.ResendPasswordRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>> resendPassword(
          _i42.ResendPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendPassword,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>.value(
                _FakeEither_0<_i27.Failure, _i41.BaseEntity>(
          this,
          Invocation.method(
            #resendPassword,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>);
}

/// A class which mocks [GetPlacesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPlacesUseCase extends _i1.Mock implements _i36.GetPlacesUseCase {
  MockGetPlacesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.GetPlacesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGetPlacesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.GetPlacesRepository);

  @override
  _i26.Future<
      _i2.Either<_i27.Failure, List<_i35.PlaceSuggestionEntity>>> execute(
          _i36.GetPlacesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i26.Future<
                _i2
                .Either<_i27.Failure, List<_i35.PlaceSuggestionEntity>>>.value(
            _FakeEither_0<_i27.Failure, List<_i35.PlaceSuggestionEntity>>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i26
          .Future<_i2.Either<_i27.Failure, List<_i35.PlaceSuggestionEntity>>>);
}

/// A class which mocks [GetProfileUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProfileUseCase extends _i1.Mock implements _i31.GetProfileUseCase {
  MockGetProfileUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.GetProfileRepository get getProfileRepository => (super.noSuchMethod(
        Invocation.getter(#getProfileRepository),
        returnValue: _FakeGetProfileRepository_5(
          this,
          Invocation.getter(#getProfileRepository),
        ),
      ) as _i7.GetProfileRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i30.ProfileEntity>> getProfile(
          _i31.GetProfileParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i30.ProfileEntity>>.value(
                _FakeEither_0<_i27.Failure, _i30.ProfileEntity>(
          this,
          Invocation.method(
            #getProfile,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i30.ProfileEntity>>);
}

/// A class which mocks [GetRolesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRolesUseCase extends _i1.Mock implements _i47.GetRolesUseCase {
  MockGetRolesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.GetRolesRepository get rolesRepository => (super.noSuchMethod(
        Invocation.getter(#rolesRepository),
        returnValue: _FakeGetRolesRepository_6(
          this,
          Invocation.getter(#rolesRepository),
        ),
      ) as _i8.GetRolesRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i32.RolesEntity>> execute(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [token],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i32.RolesEntity>>.value(
                _FakeEither_0<_i27.Failure, _i32.RolesEntity>(
          this,
          Invocation.method(
            #execute,
            [token],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i32.RolesEntity>>);
}

/// A class which mocks [GetPlaceDetailUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPlaceDetailUseCase extends _i1.Mock
    implements _i37.GetPlaceDetailUseCase {
  MockGetPlaceDetailUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.GetPlacesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGetPlacesRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.GetPlacesRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i35.PlaceSuggestionEntity>> execute(
          _i37.GetPlaceDetailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i26
            .Future<_i2.Either<_i27.Failure, _i35.PlaceSuggestionEntity>>.value(
            _FakeEither_0<_i27.Failure, _i35.PlaceSuggestionEntity>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i35.PlaceSuggestionEntity>>);
}

/// A class which mocks [LoginUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUseCase extends _i1.Mock implements _i34.LoginUseCase {
  MockLoginUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.LoginRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeLoginRepository_7(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i9.LoginRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i33.LoginEntity>> execute(
          _i34.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i33.LoginEntity>>.value(
                _FakeEither_0<_i27.Failure, _i33.LoginEntity>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i33.LoginEntity>>);
}

/// A class which mocks [LogoutUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutUsecase extends _i1.Mock implements _i29.LogoutUsecase {
  MockLogoutUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.LogoutRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeLogoutRepository_8(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i10.LogoutRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i28.LogoutEntity>> logout(
          _i29.LogoutParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i28.LogoutEntity>>.value(
                _FakeEither_0<_i27.Failure, _i28.LogoutEntity>(
          this,
          Invocation.method(
            #logout,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i28.LogoutEntity>>);
}

/// A class which mocks [ResendCodeUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendCodeUseCase extends _i1.Mock implements _i43.ResendCodeUseCase {
  MockResendCodeUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.ResendCodeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeResendCodeRepository_9(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i11.ResendCodeRepository);

  @override
  _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>> resendCode(
          _i43.ResendCodeParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendCode,
          [params],
        ),
        returnValue:
            _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>.value(
                _FakeEither_0<_i27.Failure, _i41.BaseEntity>(
          this,
          Invocation.method(
            #resendCode,
            [params],
          ),
        )),
      ) as _i26.Future<_i2.Either<_i27.Failure, _i41.BaseEntity>>);
}

/// A class which mocks [LogoutDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutDataSource extends _i1.Mock implements _i48.LogoutDataSource {
  MockLogoutDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i12.LogoutModel> logout(_i29.LogoutParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [params],
        ),
        returnValue: _i26.Future<_i12.LogoutModel>.value(_FakeLogoutModel_10(
          this,
          Invocation.method(
            #logout,
            [params],
          ),
        )),
      ) as _i26.Future<_i12.LogoutModel>);
}

/// A class which mocks [ResendPasswordDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendPasswordDataSource extends _i1.Mock
    implements _i49.ResendPasswordDataSource {
  MockResendPasswordDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i13.BaseModel> resendPassword(
          _i42.ResendPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendPassword,
          [params],
        ),
        returnValue: _i26.Future<_i13.BaseModel>.value(_FakeBaseModel_11(
          this,
          Invocation.method(
            #resendPassword,
            [params],
          ),
        )),
      ) as _i26.Future<_i13.BaseModel>);
}

/// A class which mocks [ResendCodeDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockResendCodeDataSource extends _i1.Mock
    implements _i50.ResendCodeDataSource {
  MockResendCodeDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i13.BaseModel> resendCode(_i43.ResendCodeParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendCode,
          [params],
        ),
        returnValue: _i26.Future<_i13.BaseModel>.value(_FakeBaseModel_11(
          this,
          Invocation.method(
            #resendCode,
            [params],
          ),
        )),
      ) as _i26.Future<_i13.BaseModel>);
}

/// A class which mocks [CreateNewPasswordDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateNewPasswordDataSource extends _i1.Mock
    implements _i51.CreateNewPasswordDataSource {
  MockCreateNewPasswordDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i13.BaseModel> createNewPassword(
          _i46.CreateNewPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewPassword,
          [params],
        ),
        returnValue: _i26.Future<_i13.BaseModel>.value(_FakeBaseModel_11(
          this,
          Invocation.method(
            #createNewPassword,
            [params],
          ),
        )),
      ) as _i26.Future<_i13.BaseModel>);
}

/// A class which mocks [GetProfileDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProfileDataSource extends _i1.Mock
    implements _i52.GetProfileDataSource {
  MockGetProfileDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i14.ProfileModel> getProfile(_i31.GetProfileParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [params],
        ),
        returnValue: _i26.Future<_i14.ProfileModel>.value(_FakeProfileModel_12(
          this,
          Invocation.method(
            #getProfile,
            [params],
          ),
        )),
      ) as _i26.Future<_i14.ProfileModel>);
}

/// A class which mocks [RolesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRolesDataSource extends _i1.Mock implements _i53.RolesDataSource {
  MockRolesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i15.RolesModel> getRoles(String? token) => (super.noSuchMethod(
        Invocation.method(
          #getRoles,
          [token],
        ),
        returnValue: _i26.Future<_i15.RolesModel>.value(_FakeRolesModel_13(
          this,
          Invocation.method(
            #getRoles,
            [token],
          ),
        )),
      ) as _i26.Future<_i15.RolesModel>);
}

/// A class which mocks [LoginDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginDataSource extends _i1.Mock implements _i54.LoginDataSource {
  MockLoginDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i16.LoginModel> login(_i34.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [params],
        ),
        returnValue: _i26.Future<_i16.LoginModel>.value(_FakeLoginModel_14(
          this,
          Invocation.method(
            #login,
            [params],
          ),
        )),
      ) as _i26.Future<_i16.LoginModel>);
}

/// A class which mocks [PlacesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlacesDataSource extends _i1.Mock implements _i55.PlacesDataSource {
  MockPlacesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<List<_i17.PlacesModel>> getPlaces(_i36.GetPlacesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaces,
          [params],
        ),
        returnValue:
            _i26.Future<List<_i17.PlacesModel>>.value(<_i17.PlacesModel>[]),
      ) as _i26.Future<List<_i17.PlacesModel>>);

  @override
  _i26.Future<_i17.PlacesModel> getPlaceDetail(
          _i37.GetPlaceDetailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaceDetail,
          [params],
        ),
        returnValue: _i26.Future<_i17.PlacesModel>.value(_FakePlacesModel_15(
          this,
          Invocation.method(
            #getPlaceDetail,
            [params],
          ),
        )),
      ) as _i26.Future<_i17.PlacesModel>);
}

/// A class which mocks [GetFeedDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFeedDataSource extends _i1.Mock implements _i56.GetFeedDataSource {
  MockGetFeedDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<_i18.FeedModel> getFeeds(_i40.GetFeedParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFeeds,
          [params],
        ),
        returnValue: _i26.Future<_i18.FeedModel>.value(_FakeFeedModel_16(
          this,
          Invocation.method(
            #getFeeds,
            [params],
          ),
        )),
      ) as _i26.Future<_i18.FeedModel>);
}

/// A class which mocks [HiveService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveService extends _i1.Mock implements _i57.HiveService {
  MockHiveService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  _i26.Future<void> openBox(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #openBox,
          [boxName],
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  void registerProfileAdapter() => super.noSuchMethod(
        Invocation.method(
          #registerProfileAdapter,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerProfileDataAdapter() => super.noSuchMethod(
        Invocation.method(
          #registerProfileDataAdapter,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<void> putData(
    String? boxName,
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putData,
          [
            boxName,
            key,
            value,
          ],
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  _i26.Future<dynamic> getData(
    String? boxName,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [
            boxName,
            key,
          ],
        ),
        returnValue: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  _i26.Future<void> deleteData(
    String? boxName,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteData,
          [
            boxName,
            key,
          ],
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  _i26.Future<void> clearBox(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #clearBox,
          [boxName],
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);
}

/// A class which mocks [StackRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockStackRouter extends _i1.Mock implements _i20.StackRouter {
  MockStackRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.LocalKey get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: _FakeLocalKey_17(
          this,
          Invocation.getter(#key),
        ),
      ) as _i19.LocalKey);

  @override
  _i20.PendingRoutesHandler get pendingRoutesHandler => (super.noSuchMethod(
        Invocation.getter(#pendingRoutesHandler),
        returnValue: _FakePendingRoutesHandler_18(
          this,
          Invocation.getter(#pendingRoutesHandler),
        ),
      ) as _i20.PendingRoutesHandler);

  @override
  _i21.PagelessRoutesObserver get pagelessRoutesObserver => (super.noSuchMethod(
        Invocation.getter(#pagelessRoutesObserver),
        returnValue: _FakePagelessRoutesObserver_19(
          this,
          Invocation.getter(#pagelessRoutesObserver),
        ),
      ) as _i21.PagelessRoutesObserver);

  @override
  _i20.ActiveGuardObserver get activeGuardObserver => (super.noSuchMethod(
        Invocation.getter(#activeGuardObserver),
        returnValue: _FakeActiveGuardObserver_20(
          this,
          Invocation.getter(#activeGuardObserver),
        ),
      ) as _i20.ActiveGuardObserver);

  @override
  int get stateHash => (super.noSuchMethod(
        Invocation.getter(#stateHash),
        returnValue: 0,
      ) as int);

  @override
  _i22.GlobalKey<_i22.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_21<_i22.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i22.GlobalKey<_i22.NavigatorState>);

  @override
  _i20.RouteCollection get routeCollection => (super.noSuchMethod(
        Invocation.getter(#routeCollection),
        returnValue: _FakeRouteCollection_22(
          this,
          Invocation.getter(#routeCollection),
        ),
      ) as _i20.RouteCollection);

  @override
  _i20.PageBuilder get pageBuilder => (super.noSuchMethod(
        Invocation.getter(#pageBuilder),
        returnValue: (_i20.RouteData data) => _FakeAutoRoutePage_23<dynamic>(
          this,
          Invocation.getter(#pageBuilder),
        ),
      ) as _i20.PageBuilder);

  @override
  _i23.RouteMatcher get matcher => (super.noSuchMethod(
        Invocation.getter(#matcher),
        returnValue: _FakeRouteMatcher_24(
          this,
          Invocation.getter(#matcher),
        ),
      ) as _i23.RouteMatcher);

  @override
  _i20.RouteData get current => (super.noSuchMethod(
        Invocation.getter(#current),
        returnValue: _FakeRouteData_25(
          this,
          Invocation.getter(#current),
        ),
      ) as _i20.RouteData);

  @override
  _i20.RouteData get topRoute => (super.noSuchMethod(
        Invocation.getter(#topRoute),
        returnValue: _FakeRouteData_25(
          this,
          Invocation.getter(#topRoute),
        ),
      ) as _i20.RouteData);

  @override
  bool get hasPagelessTopRoute => (super.noSuchMethod(
        Invocation.getter(#hasPagelessTopRoute),
        returnValue: false,
      ) as bool);

  @override
  List<_i20.AutoRoutePage<dynamic>> get stack => (super.noSuchMethod(
        Invocation.getter(#stack),
        returnValue: <_i20.AutoRoutePage<dynamic>>[],
      ) as List<_i20.AutoRoutePage<dynamic>>);

  @override
  bool get ignorePopCompleters => (super.noSuchMethod(
        Invocation.getter(#ignorePopCompleters),
        returnValue: false,
      ) as bool);

  @override
  set ignorePopCompleters(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #ignorePopCompleters,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i20.RoutingController> get childControllers => (super.noSuchMethod(
        Invocation.getter(#childControllers),
        returnValue: <_i20.RoutingController>[],
      ) as List<_i20.RoutingController>);

  @override
  _i24.NavigationHistory get navigationHistory => (super.noSuchMethod(
        Invocation.getter(#navigationHistory),
        returnValue: _FakeNavigationHistory_26(
          this,
          Invocation.getter(#navigationHistory),
        ),
      ) as _i24.NavigationHistory);

  @override
  _i20.UrlState get urlState => (super.noSuchMethod(
        Invocation.getter(#urlState),
        returnValue: _FakeUrlState_27(
          this,
          Invocation.getter(#urlState),
        ),
      ) as _i20.UrlState);

  @override
  String get currentPath => (super.noSuchMethod(
        Invocation.getter(#currentPath),
        returnValue: _i58.dummyValue<String>(
          this,
          Invocation.getter(#currentPath),
        ),
      ) as String);

  @override
  String get currentUrl => (super.noSuchMethod(
        Invocation.getter(#currentUrl),
        returnValue: _i58.dummyValue<String>(
          this,
          Invocation.getter(#currentUrl),
        ),
      ) as String);

  @override
  List<_i20.RouteData> get stackData => (super.noSuchMethod(
        Invocation.getter(#stackData),
        returnValue: <_i20.RouteData>[],
      ) as List<_i20.RouteData>);

  @override
  bool get managedByWidget => (super.noSuchMethod(
        Invocation.getter(#managedByWidget),
        returnValue: false,
      ) as bool);

  @override
  bool get isTopMost => (super.noSuchMethod(
        Invocation.getter(#isTopMost),
        returnValue: false,
      ) as bool);

  @override
  bool get canNavigateBack => (super.noSuchMethod(
        Invocation.getter(#canNavigateBack),
        returnValue: false,
      ) as bool);

  @override
  _i20.RootStackRouter get root => (super.noSuchMethod(
        Invocation.getter(#root),
        returnValue: _FakeRootStackRouter_28(
          this,
          Invocation.getter(#root),
        ),
      ) as _i20.RootStackRouter);

  @override
  bool get isRoot => (super.noSuchMethod(
        Invocation.getter(#isRoot),
        returnValue: false,
      ) as bool);

  @override
  _i20.RouteMatch<dynamic> get topMatch => (super.noSuchMethod(
        Invocation.getter(#topMatch),
        returnValue: _FakeRouteMatch_29<dynamic>(
          this,
          Invocation.getter(#topMatch),
        ),
      ) as _i20.RouteMatch<dynamic>);

  @override
  _i20.RouteData get routeData => (super.noSuchMethod(
        Invocation.getter(#routeData),
        returnValue: _FakeRouteData_25(
          this,
          Invocation.getter(#routeData),
        ),
      ) as _i20.RouteData);

  @override
  bool get hasEntries => (super.noSuchMethod(
        Invocation.getter(#hasEntries),
        returnValue: false,
      ) as bool);

  @override
  int get pageCount => (super.noSuchMethod(
        Invocation.getter(#pageCount),
        returnValue: 0,
      ) as int);

  @override
  List<_i20.RouteMatch<dynamic>> get currentSegments => (super.noSuchMethod(
        Invocation.getter(#currentSegments),
        returnValue: <_i20.RouteMatch<dynamic>>[],
      ) as List<_i20.RouteMatch<dynamic>>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<void> reevaluateGuards() => (super.noSuchMethod(
        Invocation.method(
          #reevaluateGuards,
          [],
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  bool canPop({
    bool? ignoreChildRoutes = false,
    bool? ignoreParentRoutes = false,
    bool? ignorePagelessRoutes = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #canPop,
          [],
          {
            #ignoreChildRoutes: ignoreChildRoutes,
            #ignoreParentRoutes: ignoreParentRoutes,
            #ignorePagelessRoutes: ignorePagelessRoutes,
          },
        ),
        returnValue: false,
      ) as bool);

  @override
  _i26.Future<T?> pushWidget<T extends Object?>(
    _i22.Widget? widget, {
    _i22.RouteTransitionsBuilder? transitionBuilder,
    bool? fullscreenDialog = false,
    Duration? transitionDuration = const Duration(milliseconds: 300),
    bool? opaque = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushWidget,
          [widget],
          {
            #transitionBuilder: transitionBuilder,
            #fullscreenDialog: fullscreenDialog,
            #transitionDuration: transitionDuration,
            #opaque: opaque,
          },
        ),
        returnValue: _i26.Future<T?>.value(),
      ) as _i26.Future<T?>);

  @override
  _i26.Future<T?> pushNativeRoute<T extends Object?>(_i22.Route<T>? route) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNativeRoute,
          [route],
        ),
        returnValue: _i26.Future<T?>.value(),
      ) as _i26.Future<T?>);

  @override
  _i26.Future<bool> pop<T extends Object?>([T? result]) => (super.noSuchMethod(
        Invocation.method(
          #pop,
          [result],
        ),
        returnValue: _i26.Future<bool>.value(false),
      ) as _i26.Future<bool>);

  @override
  void popForced<T extends Object?>([T? result]) => super.noSuchMethod(
        Invocation.method(
          #popForced,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool removeLast() => (super.noSuchMethod(
        Invocation.method(
          #removeLast,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void removeRoute(
    _i20.RouteData? route, {
    bool? notify = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #removeRoute,
          [route],
          {#notify: notify},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<T?> push<T extends Object?>(
    _i20.PageRouteInfo<dynamic>? route, {
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #push,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i26.Future<T?>.value(),
      ) as _i26.Future<T?>);

  @override
  _i26.Future<T?> replace<T extends Object?>(
    _i20.PageRouteInfo<dynamic>? route, {
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replace,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i26.Future<T?>.value(),
      ) as _i26.Future<T?>);

  @override
  _i26.Future<void> pushAll(
    List<_i20.PageRouteInfo<dynamic>>? routes, {
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushAll,
          [routes],
          {#onFailure: onFailure},
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  _i26.Future<void> popAndPushAll(
    List<_i20.PageRouteInfo<dynamic>>? routes, {
    dynamic onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #popAndPushAll,
          [routes],
          {#onFailure: onFailure},
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  _i26.Future<void> replaceAll(
    List<_i20.PageRouteInfo<dynamic>>? routes, {
    _i20.OnNavigationFailure? onFailure,
    bool? updateExistingRoutes = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceAll,
          [routes],
          {
            #onFailure: onFailure,
            #updateExistingRoutes: updateExistingRoutes,
          },
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  void popUntilRoot() => super.noSuchMethod(
        Invocation.method(
          #popUntilRoot,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<T?> popAndPush<T extends Object?, TO extends Object?>(
    _i20.PageRouteInfo<dynamic>? route, {
    TO? result,
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #popAndPush,
          [route],
          {
            #result: result,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i26.Future<T?>.value(),
      ) as _i26.Future<T?>);

  @override
  bool removeUntil(
    _i20.RouteDataPredicate? predicate, {
    bool? scoped = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUntil,
          [predicate],
          {#scoped: scoped},
        ),
        returnValue: false,
      ) as bool);

  @override
  void popUntil(
    _i22.RoutePredicate? predicate, {
    bool? scoped = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#scoped: scoped},
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool removeWhere(
    _i20.RouteDataPredicate? predicate, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWhere,
          [predicate],
          {#notify: notify},
        ),
        returnValue: false,
      ) as bool);

  @override
  void updateDeclarativeRoutes(List<_i20.PageRouteInfo<dynamic>>? routes) =>
      super.noSuchMethod(
        Invocation.method(
          #updateDeclarativeRoutes,
          [routes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<void> navigateAll(
    List<_i20.RouteMatch<dynamic>>? routes, {
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateAll,
          [routes],
          {#onFailure: onFailure},
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  _i26.Future<T?> pushAndPopUntil<T extends Object?>(
    _i20.PageRouteInfo<dynamic>? route, {
    required _i22.RoutePredicate? predicate,
    bool? scopedPopUntil = true,
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushAndPopUntil,
          [route],
          {
            #predicate: predicate,
            #scopedPopUntil: scopedPopUntil,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i26.Future<T?>.value(),
      ) as _i26.Future<T?>);

  @override
  _i26.Future<T?> replaceNamed<T extends Object?>(
    String? path, {
    bool? includePrefixMatches = false,
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceNamed,
          [path],
          {
            #includePrefixMatches: includePrefixMatches,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i26.Future<T?>.value(),
      ) as _i26.Future<T?>);

  @override
  _i26.Future<T?> pushNamed<T extends Object?>(
    String? path, {
    bool? includePrefixMatches = false,
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamed,
          [path],
          {
            #includePrefixMatches: includePrefixMatches,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i26.Future<T?>.value(),
      ) as _i26.Future<T?>);

  @override
  void popUntilRouteWithName(
    String? name, {
    bool? scoped = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntilRouteWithName,
          [name],
          {#scoped: scoped},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popUntilRouteWithPath(
    String? path, {
    bool? scoped = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntilRouteWithPath,
          [path],
          {#scoped: scoped},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void markUrlStateForReplace() => super.noSuchMethod(
        Invocation.method(
          #markUrlStateForReplace,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void attachChildController(_i20.RoutingController? childController) =>
      super.noSuchMethod(
        Invocation.method(
          #attachChildController,
          [childController],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeChildController(_i20.RoutingController? childController) =>
      super.noSuchMethod(
        Invocation.method(
          #removeChildController,
          [childController],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyAll({bool? forceUrlRebuild = false}) => super.noSuchMethod(
        Invocation.method(
          #notifyAll,
          [],
          {#forceUrlRebuild: forceUrlRebuild},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<void> navigateNamed(
    String? path, {
    bool? includePrefixMatches = false,
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateNamed,
          [path],
          {
            #includePrefixMatches: includePrefixMatches,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i26.Future<void>.value(),
        returnValueForMissingStub: _i26.Future<void>.value(),
      ) as _i26.Future<void>);

  @override
  List<_i20.HierarchySegment> currentHierarchy({
    bool? asPath = false,
    bool? ignorePending = false,
    bool? ignoreParams = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #currentHierarchy,
          [],
          {
            #asPath: asPath,
            #ignorePending: ignorePending,
            #ignoreParams: ignoreParams,
          },
        ),
        returnValue: <_i20.HierarchySegment>[],
      ) as List<_i20.HierarchySegment>);

  @override
  bool isRouteActive(String? routeName) => (super.noSuchMethod(
        Invocation.method(
          #isRouteActive,
          [routeName],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isRouteDataActive(_i20.RouteData? data) => (super.noSuchMethod(
        Invocation.method(
          #isRouteDataActive,
          [data],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isPathActive(String? path) => (super.noSuchMethod(
        Invocation.method(
          #isPathActive,
          [path],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i20.RouteMatch<dynamic>? match(_i20.PageRouteInfo<dynamic>? route) =>
      (super.noSuchMethod(Invocation.method(
        #match,
        [route],
      )) as _i20.RouteMatch<dynamic>?);

  @override
  _i26.Future<dynamic> navigate(
    _i20.PageRouteInfo<dynamic>? route, {
    _i20.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigate,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i26.Future<dynamic>.value(),
      ) as _i26.Future<dynamic>);

  @override
  void navigateBack() => super.noSuchMethod(
        Invocation.method(
          #navigateBack,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void back() => super.noSuchMethod(
        Invocation.method(
          #back,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pushPathState(Object? state) => super.noSuchMethod(
        Invocation.method(
          #pushPathState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i20.RoutingController topMostRouter({bool? ignorePagelessRoutes = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #topMostRouter,
          [],
          {#ignorePagelessRoutes: ignorePagelessRoutes},
        ),
        returnValue: _FakeRoutingController_30(
          this,
          Invocation.method(
            #topMostRouter,
            [],
            {#ignorePagelessRoutes: ignorePagelessRoutes},
          ),
        ),
      ) as _i20.RoutingController);

  @override
  void updateRouteData(_i20.RouteData? data) => super.noSuchMethod(
        Invocation.method(
          #updateRouteData,
          [data],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T? innerRouterOf<T extends _i20.RoutingController>(String? routeName) =>
      (super.noSuchMethod(Invocation.method(
        #innerRouterOf,
        [routeName],
      )) as T?);

  @override
  _i26.Future<bool> popTop<T extends Object?>([T? result]) =>
      (super.noSuchMethod(
        Invocation.method(
          #popTop,
          [result],
        ),
        returnValue: _i26.Future<bool>.value(false),
      ) as _i26.Future<bool>);

  @override
  _i20.PageRouteInfo<dynamic>? buildPageRoute(
    String? path, {
    bool? includePrefixMatches = true,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #buildPageRoute,
        [path],
        {#includePrefixMatches: includePrefixMatches},
      )) as _i20.PageRouteInfo<dynamic>?);

  @override
  List<_i20.PageRouteInfo<dynamic>>? buildPageRoutesStack(
    String? path, {
    bool? includePrefixMatches = true,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #buildPageRoutesStack,
        [path],
        {#includePrefixMatches: includePrefixMatches},
      )) as List<_i20.PageRouteInfo<dynamic>>?);

  @override
  void addListener(_i59.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i59.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRouter extends _i1.Mock implements _i60.AppRouter {
  MockAppRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i20.AutoRoute> get routes => (super.noSuchMethod(
        Invocation.getter(#routes),
        returnValue: <_i20.AutoRoute>[],
      ) as List<_i20.AutoRoute>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i25.Dio {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_31(
          this,
          Invocation.getter(#options),
        ),
      ) as _i25.BaseOptions);

  @override
  set options(_i25.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i25.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_32(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i25.HttpClientAdapter);

  @override
  set httpClientAdapter(_i25.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i25.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_33(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i25.Transformer);

  @override
  set transformer(_i25.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i25.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_34(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i25.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i26.Future<_i25.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
    _i25.ProgressCallback? onSendProgress,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
    _i25.ProgressCallback? onSendProgress,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
    _i25.ProgressCallback? onSendProgress,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
    _i25.ProgressCallback? onSendProgress,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
    _i25.ProgressCallback? onSendProgress,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
    _i25.ProgressCallback? onSendProgress,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i25.Options? options,
    _i25.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i25.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i25.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i25.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i26.Future<_i25.Response<dynamic>>.value(_FakeResponse_35<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<dynamic>>);

  @override
  _i26.Future<_i25.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i25.ProgressCallback? onReceiveProgress,
    _i25.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i25.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i26.Future<_i25.Response<dynamic>>.value(_FakeResponse_35<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<dynamic>>);

  @override
  _i26.Future<_i25.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i25.CancelToken? cancelToken,
    _i25.Options? options,
    _i25.ProgressCallback? onSendProgress,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i25.CancelToken? cancelToken,
    _i25.Options? options,
    _i25.ProgressCallback? onSendProgress,
    _i25.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);

  @override
  _i26.Future<_i25.Response<T>> fetch<T>(_i25.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i26.Future<_i25.Response<T>>.value(_FakeResponse_35<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i26.Future<_i25.Response<T>>);
}
